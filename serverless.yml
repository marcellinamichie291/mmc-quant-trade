org: ryanycw
app: mmc
service: footballArb
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  # stage: dev
  region: ${env:AWS_REGION_MMC}
  profile: ${env:AWS_PROFILE_MMC} # profile of your aws credentials
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 29 # optional, in seconds, default is 6
  environment:
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${env:AWS_DYNAMODB_TABLE_NAME_FOOTBALL}"

functions:
  # Premium API
  fetchPremium:
    name: ${self:service}-fetchPremium
    handler: scripts/aws/lambda/fetchPremium.fetchPremium
    events:
      - httpApi:
          path: /football/premium
          method: get
  # Trade API
  exeOrder:
    name: ${self:service}-exeOrder
    handler: scripts/aws/lambda/exeOrder.exeOrder
    events:
      - httpApi:
          path: /football/order
          method: post

resources:
  Resources:
    # DB scheme
    FootballArb:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${env:AWS_DYNAMODB_TABLE_NAME_FOOTBALL}

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin